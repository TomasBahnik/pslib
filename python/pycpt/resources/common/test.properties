[Main]
# used by com.ataccama.one.performance.service.ApiService
api.test.username=admin
api.test.password=admin
app.db.name=mmm
app.db.password=one
app.db.user=one
app.db.role=${app.db.user}
# it is possible restore to other than app.db.name for testing purpose
# app.db.user and app.db.password are the same
db.restore.to.name=mmm
# used by com.ataccama.one.performance.service.ApiService
# and by shell script when checking state of APP by curl
# before actually running any test
# for default ports (80, 443) can be empty
#app.port=
app.protocol=https
# number of attempt to check for running BE
# env.sh shell script contains sleep in seconds
# export WAIT_FOR_APP_START_SLEEP=20
# so actual wait time = WAIT_FOR_APP_START_SLEEP * app.start.checks
app.start.checks=30
# wait before next check of async job status
async.call.wait.ms=20000
# timeout of FutureTask async call when checking async job status
# after that time java.util.concurrent.TimeoutException exception is thrown
async.timeout.sec=1200
# APP DB host and port
# when deployed by nomad, postgres runs on $NOMAD_ID-mmm-pg.service.$NOMAD_DC.prg-krl.atc
db.host=localhost
db.port=5431
# if beforeMethod calls reset_db_env.sql which (currently)
# resets query stats so that each request records only query stats related to that request
# also turns off top queries - makes no senses without resetting db env
# sql.service.active is tested first ( A && B)
db.reset.environment=false
db.super.user=postgres
db.super.password=postgres
# START Jenkins env vars : controls execution of individual steps in pipeline
# deletes the job at the beginning of pipeline
delete.job.first=false
app.start=false
db.create=false
db.backup=false
# if and where the db dumps should be published by pg_backup script
db.publish=false
# after changing the symlink delete the old backup
db.remove.old.backup=false
db.publish.dir=/var/www/html/backup
db.restore=false
# used when db.restore=true
model.refresh=false
model.refresh.type=SOFT
model.refresh.wait.sec=300
run.testng.suite=false
run.fe.tests=false
run.gql.tests=false
# deletes the job at the end of pipeline
delete.job=false
# can be removed
init.gradle=false
debug.gradle=false
# Start of MMM JVM properties
# profiler.agent.env used when app.start=true and must be set in lowest possible level
# it cannot be overridden by "" and empty property is as unset property
# YourKit
# profiler.agent.env=MMM_ADD_FILE_URL,http://perf02.build.prg-krl.atc:8088/tools/libyjpagent.so,MMM_PROFILER_AGENT_JAVA_OPTS,-agentpath:/opt/ataccama/volume/libyjpagent.so=port=10001%2Clisten=all
# Jprofiler
# profiler.agent.env= MMM_ADD_FILE_URL,http://perf02.build.prg-krl.atc:8088/tools/jprofiler_linux_10_1_5.tar.gz,MMM_PROFILER_AGENT_JAVA_OPTS,-agentpath:/opt/ataccama/volume/jprofiler10.1.5/bin/linux-x64/libjprofilerti.so=port=10001%2Cnowait
mmm.memory.mb=8192
# END of MMM JVM properties
# END of Jenkins env vars
# or http://log01b.do.prg-krl.atc:5050
elk.base.url=http://log01a.do.prg-krl.atc:5050
elk.sent.events=false
# too large (~40000 chars) strings are not accepted by ELK
elk.error.size=5000
# used by com.ataccama.one.performance.HttpClient and
# com.ataccama.one.performance.model.TestResultEvent so it can be used to filter out
# HTTP request > http.connection.timeout.sec
http.connection.timeout.sec=480
# field checked when searching for job status
job.checked.field=status
# job status leading to return from the async call
job.checked.values=FINISHED
# for data creation : profiling limit # of items to be actually profiled
# bulk profiling is not supported
profile.max.catalog.items=1
profile.max.catalog.items.percent=10
# false means use the first
profile.random.catalog.items=false
# use percentage instead of max
profile.percent.catalog.items=false
# turn on/off features requiring command line access to BE DB
sql.service.active=false
# com.ataccama.one.performance.service.SQLService.PG_SERVICE_TYPE
# used by Jenkins pipeline to decide which MMM_DB is used
sql.service.type=postgresql
# TODO  remove replace by latest (see tasks.md)
test.suite.name=Performance Test
# regexp for parsing top queries
# queryid|calls|total_time|shared_blks_hit|shared_blks_read|shared_blks_written
top.query.examples.regexp=^(-?\\d+)\\|(\\d+)\\|(\\d+\\.\\d+)\\|(\\d+)\\|(\\d+)\\|(\\d+)$
# extracts query ID and query text used when top.query.text=true
# TODO preserve spaces in query text
top.query.text.regexp=^(-?\\d+)\\|(.+)$
# add query text to query stats : quite slow
# sql.service.active is tested first ( A && B)
top.query.text=false
# com.ataccama.one.performance.QueryCallCache is used to store
# graphql results so they can be reused for subsequent call
# Local test env does not depend on running BE so that feature can be turned off
use.query.cache=true
load.build.info=true
# even without loading data profiling configuration is available
load.test.data=false
profile.configuration.type=SAMPLE
## used by local tests
async.wait.sec=2
succeeded.tests=4
top.queries.count=50
# Oracle restore requires backup dump loaded to docker image, deployment fails when null
# Instead of set it conditionally only for Oracle and restore in Jenkinsfile set a default
# to something unused
db.restore.env=DB_RESTORE_ENV,NONE
# always not empty
mmm.env=ENV_MMM_LOGGING_LEVEL_COM_ATACCAMA,INFO,ENV_DPM_LOGGING_LEVEL_COM_ATACCAMA,INFO,ENV_DPE_LOGGING_LEVEL_COM_ATACCAMA,INFO,ENV_MMM_ATACCAMA_LOGGING_PLAINTEXTFILEAPPENDER,true
profiler.agent.env=PROFILER_AGENT_ENV,NONE
docker.host=perf01.build.prg-krl.atc
nomad.healthy.deadline=30m
# MMM,FE,DP,AI
deploy.groups=MMM,FE,DP,AI
port.offset=0
be.app.image=master
fe.app.image=master
dpm.app.image=master
dpe.app.image=master
aicore.app.image=latest
rdm.mdm.app.image=0.1.10
app.health.check=true
# where LR vugen runs
lr.host=perf05win.build.prg-krl.atc
test.suite=generated
# relative to CPT_PATH (without / at beginning)
generated.gqls.dir=modules/api-tests/resources/common/data/generated/
# in order to find the correct container ID
# no port offset set - default port
# 8021->8021 (default)
# 8121->8021 (port offset 100)
mmm.docker.search=8021-
drop.first.data=false
# FQDN of FE host used by lr_vugen_remote.sh
fe.app.url=http://perf01.build.prg-krl.atc:8023/
# script return exit code = 0 even in case of error, just logs the error - next shell script in the same stage will continue
fe.error.ignore=true
db.restore.to.minikube=false
# no additional profiling by default
profile.rounds=0
# wait before checking for failed jobs (prolongs profiling time measurement)
profile.wait.ms.failed.jobs=500
upload.lookups=false
load.demo.data=false
use.test.env.data=false
# used during automated run to get info from remote deployment
ssh.onprem.user=jenkins
jenkins.force.release.version=false
#publish job-stats report to elk
publish.job.stats=false
# backup both schema and data
db.full.backup=false
# elastic search URL
es.url=http://onerces03.sol.prg-krl.atc:9200
es.index=performance_com_ataccama_one_search_catalog_item
es.drop.first=true
es.query.template=performance_com_ataccama_one_search_catalog_item_search
app.password=admin
minio.access.key=minio
minio.secret.key=minio-secret
minio.content.dir=/var/www/html/backup/
minio.import=false
minio.cleanup=false
# Oracle specific properties located in resources/ora_common/test.properties
# as apart of properties cleanup = remove duplicated assignment
# TODO add prefix ora
db.service=ORCLPDB1
app.ora.module=JDBC Thin Client
ora.client.home.dir=
db.restore.log.path=
# TODO replace by compound property
# logic behind if `app.domain` is empty use app.host
app.domain=
# front end test related
lr.vugen.script.random=
# restore backup
db.backup.path=
db.restore.path=
db.latest.backup=
switch.app.level=
dpm.port=8031
dpe.port=8034
# used to select compatible pg tools. On Azure version 12
pg.cluster=13/main
cpt.ui.branch=13.6